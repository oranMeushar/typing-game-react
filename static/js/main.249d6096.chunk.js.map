{"version":3,"sources":["Game/Typing/Typing.js","Game/CorrectAnswers/CorrectAnswers.js","assets/words.js","Game/Game.js","App.js","index.js"],"names":["Typing","props","useState","words","Math","floor","random","length","currentWord","setCurrentWord","userInput","setUserInput","counter","setCounter","newBarThreshold","setNewBarThreshold","inputRef","React","useRef","timerRef","useEffect","interval","started","current","focus","setInterval","clearInterval","style","width","toLocaleLowerCase","setSuccesWords","succeesWords","difficultyLevel","handleInputChange","e","preventDefault","target","value","Transition","in","timeout","state","className","ref","onSubmit","type","placeholder","onChange","disabled","CorrectAnswers","map","word","idx","Game","App","showDifficulty","setShowDifficulty","setDifficultyLevel","isGame","setIsGame","CSSTransition","classNames","unmountOnExit","name","id","selected","onClick","classList","add","ReactDOM","render","document","getElementById"],"mappings":"mTAoGeA,EAhGA,SAACC,GACZ,MAAsCC,mBAASD,EAAME,MAAMC,KAAKC,MAAMD,KAAKE,SAAWL,EAAME,MAAMI,UAAlG,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAkCP,mBAAS,IAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KACA,EAA8BT,mBAAS,IAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KACA,EAA8CX,mBAAS,IAAvD,mBAAOY,EAAP,KAAwBC,EAAxB,KACMC,EAAWC,IAAMC,SACjBC,EAAWF,IAAMC,SAEvBE,qBAAU,WACN,IAAIC,EAAW,KAYf,OAXIpB,EAAMqB,SAAWV,GAAW,IAC5BI,EAASO,QAAQC,QACjBH,EAAWI,aAAY,WACnBZ,GAAW,SAACD,GAAD,QAAeA,KACN,IAAZA,IACAc,cAAcL,GACdR,EAAW,gBAEpB,MAEPM,EAASI,QAAQI,MAAMC,MAAvB,UAAmChB,EAAUE,EAAkB,IAA/D,KACO,kBAAKY,cAAcL,MAE5B,CAACT,EAASX,EAAMqB,UAGlBF,qBAAU,WACN,GAAIV,GAAaA,EAAUmB,sBAAwBrB,EAAYqB,oBAK3D,OAJAlB,EAAa,IACbF,EAAeR,EAAME,MAAMC,KAAKC,MAAMD,KAAKE,SAAWL,EAAME,MAAMI,UAClEN,EAAM6B,eAAN,sBAAyB7B,EAAM8B,cAA/B,CAA6CrB,KAErCT,EAAM+B,iBACV,IAAK,OACDnB,GAAW,SAACD,GAAD,OAAYA,EAAU,KAC7BA,EAAU,EAAIE,GACdC,GAAmB,SAACH,GAAD,OAAYA,EAAU,KAE7C,MACJ,IAAK,SACDC,GAAW,SAACD,GAAD,OAAYA,EAAU,KAC7BA,EAAU,EAAIE,GACdC,GAAmB,SAACH,GAAD,OAAYA,EAAU,KAE7C,MACJ,IAAK,OACDC,GAAW,SAACD,GAAD,OAAYA,EAAU,KAC7BA,EAAU,EAAIE,GACdC,GAAmB,SAACH,GAAD,OAAYA,EAAU,QAQ3D,CAACF,IAGH,IAAMuB,EAAoB,SAACC,GACvBA,EAAEC,iBACFxB,EAAauB,EAAEE,OAAOC,QAE1B,OACI,cAACC,EAAA,EAAD,CAAYC,GAAItC,EAAMqB,QAASkB,QAAS,IAAxC,SACK,SAACC,GAAD,OACG,qBAAKC,UAAS,wBAAmBD,GAAjC,SACI,cAACH,EAAA,EAAD,CAAYC,GAAItC,EAAMqB,QAASkB,QAAS,IAAxC,SACK,SAACC,GAAD,OACG,sBAAKC,UAAS,sBAAiBD,GAA/B,UACA,oBAAIC,UAAU,eAAd,SAA8BlC,IAC9B,sBAAKkC,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,qBAAKA,UAAU,oBAAoBC,IAAKxB,MAE5C,6BAAKP,OAET,sBAAM8B,UAAU,eAAeE,SAAUX,EAAzC,SACI,uBACIY,KAAK,OACLC,YAAY,eACZT,MAAO3B,EACPqC,SAAUd,EACVe,SAAqB,cAAXpC,EACV+B,IAAK3B,kBC/D1BiC,G,MApBQ,SAAChD,GACpB,OACI,cAACqC,EAAA,EAAD,CAAYC,GAAItC,EAAMqB,QAASkB,QAAS,IAAxC,SACK,SAACC,GAAD,OACG,sBAAKC,UAAS,wCAAmCD,GAAjD,UACI,mDAAsBxC,EAAM8B,aAAaxB,UACzC,6BACCN,EAAM8B,aAAamB,KAAI,SAACC,EAAMC,GAC3B,OACI,6BAAeD,GAANC,gBCdxBjD,EAAO,CAChB,OACA,OACA,OACA,WACA,QACA,QACA,WACA,KACA,cACA,QACA,OACA,YACA,aACA,SACA,OACA,UACA,UACA,WACA,SACA,YACA,YACA,QACA,WACA,SACA,SACA,QACA,UACA,YACA,QACA,QACA,OACA,OACA,YACA,UACA,MACA,UACA,QACA,OACA,OACA,SACA,SACA,SACA,SACA,SACA,YACA,WACA,UACA,UACA,SACA,YACA,UACA,QACA,WACA,YACA,QACA,OACA,QACA,MACA,OACA,aACA,UACA,UACA,OACA,UACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,UACA,OACA,OACA,MACA,QACA,QACA,OACA,SACA,YACA,SACA,YACA,OACA,OACA,aACA,SACA,WACA,QACA,UACA,SACA,OACA,UACA,WACA,UACA,QACA,OACA,OACA,SACA,SACA,OACA,WACA,KACA,WACA,UACA,OACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,aACA,WACA,SACA,aACA,OACA,SACA,aACA,UACA,YACA,UACA,YACA,aACA,SACA,UACA,QACA,UACA,UACA,YACA,WACA,SACA,QACA,SACA,aACA,UACA,UACA,UChHWkD,EApBF,SAACpD,GAEV,MAAuCC,mBAAS,IAAhD,mBAAO6B,EAAP,KAAqBD,EAArB,KAEA,OACI,sBAAKY,UAAU,OAAf,UACI,cAAC,EAAD,CACIpB,QAASrB,EAAMqB,QACfnB,MAAOA,EACP6B,gBAAiB/B,EAAM+B,gBACvBF,eAAgBA,EAChBC,aAAcA,IAElB,cAAC,EAAD,CACAT,QAASrB,EAAMqB,QACfS,aAAcA,QC8BXuB,G,MA7CH,WAEV,MAA4CpD,oBAAS,GAArD,mBAAOqD,EAAP,KAAuBC,EAAvB,KACA,EAA8CtD,mBAAS,QAAvD,mBAAO8B,EAAP,KAAwByB,EAAxB,KACA,EAA4BvD,oBAAS,GAArC,mBAAOwD,EAAP,KAAeC,EAAf,KAwBA,OACE,sBAAKjB,UAAU,MAAf,UArBE,cAACkB,EAAA,EAAD,CAAerB,GAAIgB,EAAgBf,QAAS,IAAKqB,WAAW,aAAaC,eAAa,EAAtF,SACE,sBAAKpB,UAAU,aAAf,UACE,4CACA,yBAAQqB,KAAK,aAAaC,GAAG,aAAajB,SAAU,SAACb,GAAD,OAAMuB,EAAmBvB,EAAEE,OAAOC,QAAtF,UACE,wBAAQA,MAAM,OAAO4B,UAAQ,EAA7B,kBACA,wBAAQ5B,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,0BAiBN,wBACE6B,QAVkB,SAAChC,GACvBsB,GAAkB,GAClBG,GAAU,GACVzB,EAAEE,OAAO+B,UAAUC,IAAI,2BAQnB1B,UAAU,oBAFZ,wBAIA,wBACEwB,QAAS,kBAAKV,GAAmBD,IACjCb,UAAU,oBACVM,SAAUU,EAHZ,0BAKA,cAAC,EAAD,CAAMpC,QAASoC,EAAQ1B,gBAAiBA,SCzC9CqC,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.249d6096.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Typing.css';\r\nimport {Transition} from 'react-transition-group';\r\n\r\nconst Typing = (props) => {\r\n    const [currentWord, setCurrentWord] = useState(props.words[Math.floor(Math.random() * props.words.length)]);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [counter, setCounter] = useState(11);\r\n    const [newBarThreshold, setNewBarThreshold] = useState(11)\r\n    const inputRef = React.useRef();\r\n    const timerRef = React.useRef();\r\n    \r\n    useEffect(() =>{\r\n        let interval = null;\r\n        if (props.started && counter >= 0) {\r\n            inputRef.current.focus();\r\n            interval = setInterval(() =>{\r\n                setCounter((counter) => --counter);\r\n                    if (counter === 0) {\r\n                        clearInterval(interval);\r\n                        setCounter('Game Over')\r\n                    }\r\n            }, 1000)\r\n        }\r\n        timerRef.current.style.width = `${(counter / newBarThreshold * 100)}%`\r\n        return ()=> clearInterval(interval)\r\n\r\n    },[counter, props.started])\r\n\r\n\r\n    useEffect(() =>{\r\n        if (userInput && userInput.toLocaleLowerCase() === currentWord.toLocaleLowerCase()) {\r\n            setUserInput('');\r\n            setCurrentWord(props.words[Math.floor(Math.random() * props.words.length)]);\r\n            props.setSuccesWords([...props.succeesWords, userInput]);\r\n\r\n            switch (props.difficultyLevel) {\r\n                case 'easy':\r\n                    setCounter((counter)=> counter + 5);\r\n                    if (counter + 5 > newBarThreshold) {\r\n                        setNewBarThreshold((counter)=> counter + 5)\r\n                    }\r\n                    break;\r\n                case 'medium':\r\n                    setCounter((counter)=> counter + 3);\r\n                    if (counter + 3 > newBarThreshold) {\r\n                        setNewBarThreshold((counter)=> counter + 3)\r\n                    }\r\n                    break;\r\n                case 'hard':\r\n                    setCounter((counter)=> counter + 2);\r\n                    if (counter + 2 > newBarThreshold) {\r\n                        setNewBarThreshold((counter)=> counter + 2)\r\n                    }\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    },[userInput])\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        e.preventDefault();\r\n        setUserInput(e.target.value);\r\n    }\r\n    return (\r\n        <Transition in={props.started} timeout={500}>\r\n            {(state) =>(\r\n                <div className={`Typing Typing-${state}`}>\r\n                    <Transition in={props.started} timeout={700}>\r\n                        {(state) => (\r\n                            <div className={`board board-${state}`}>\r\n                            <h1 className=\"board-header\">{currentWord}</h1>\r\n                            <div className=\"timer-container\">\r\n                                <div className=\"timer-border-empty\">\r\n                                    <div className=\"timer-border-full\" ref={timerRef}></div>\r\n                                </div>\r\n                                <h2>{counter}</h2>\r\n                            </div>\r\n                            <form className=\"board-footer\" onSubmit={handleInputChange}>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    placeholder=\"Type Here...\"\r\n                                    value={userInput}\r\n                                    onChange={handleInputChange}\r\n                                    disabled={counter ==='Game Over' } \r\n                                    ref={inputRef}/>\r\n                            </form>\r\n                        </div>\r\n                        )}\r\n                    </Transition>\r\n                    \r\n                </div>\r\n            )}\r\n        </Transition>\r\n    );\r\n};\r\n\r\nexport default Typing;","import React from 'react';\r\nimport './CorrectAnswers.css';\r\nimport {Transition} from 'react-transition-group';\r\n\r\n\r\nconst CorrectAnswers = (props) => {\r\n    return (\r\n        <Transition in={props.started} timeout={500}>\r\n            {(state) =>(\r\n                <div className={`CorrectAnswers CorrectAnswers-${state}`}>\r\n                    <h1>Correct Answers: {props.succeesWords.length}</h1>\r\n                    <ul>\r\n                    {props.succeesWords.map((word, idx) =>{\r\n                        return(\r\n                            <li key={idx}>{word}</li>\r\n                        )\r\n                    })}\r\n                    </ul>\r\n                    \r\n                </div>\r\n            )}\r\n        </Transition>\r\n    );\r\n};\r\n\r\nexport default CorrectAnswers;","export const words= [\r\n    \"even\",\r\n    \"hide\",\r\n    \"read\",\r\n    \"national\",\r\n    \"medal\",\r\n    \"shake\",\r\n    \"champion\",\r\n    \"an\",\r\n    \"interactive\",\r\n    \"spine\",\r\n    \"pool\",\r\n    \"operation\",\r\n    \"repetition\",\r\n    \"pepper\",\r\n    \"bark\",\r\n    \"explain\",\r\n    \"fortune\",\r\n    \"survivor\",\r\n    \"sketch\",\r\n    \"discovery\",\r\n    \"craftsman\",\r\n    \"arena\",\r\n    \"minority\",\r\n    \"spider\",\r\n    \"shadow\",\r\n    \"guest\",\r\n    \"factory\",\r\n    \"machinery\",\r\n    \"paper\",\r\n    \"feast\",\r\n    \"past\",\r\n    \"fine\",\r\n    \"volunteer\",\r\n    \"initial\",\r\n    \"pin\",\r\n    \"perform\",\r\n    \"fever\",\r\n    \"monk\",\r\n    \"safe\",\r\n    \"foster\",\r\n    \"embryo\",\r\n    \"statio\",\r\n    \"matter\",\r\n    \"labour\",\r\n    \"economist\",\r\n    \"motorist\",\r\n    \"manager\",\r\n    \"victory\",\r\n    \"indoor\",\r\n    \"recommend\",\r\n    \"attract\",\r\n    \"chair\",\r\n    \"straight\",\r\n    \"neighbour\",\r\n    \"chest\",\r\n    \"skin\",\r\n    \"nerve\",\r\n    \"joy\",\r\n    \"shed\",\r\n    \"decorative\",\r\n    \"outlook\",\r\n    \"culture\",\r\n    \"half\",\r\n    \"whisper\",\r\n    \"single\",\r\n    \"decrease\",\r\n    \"pumpkin\",\r\n    \"cutting\",\r\n    \"scratch\",\r\n    \"throat\",\r\n    \"headline\",\r\n    \"quarrel\",\r\n    \"wind\",\r\n    \"hook\",\r\n    \"fox\",\r\n    \"trace\",\r\n    \"seize\",\r\n    \"food\",\r\n    \"career\",\r\n    \"violation\",\r\n    \"decade\",\r\n    \"important\",\r\n    \"cave\",\r\n    \"cute\",\r\n    \"transition\",\r\n    \"depend\",\r\n    \"broccoli\",\r\n    \"flush\",\r\n    \"feature\",\r\n    \"forbid\",\r\n    \"text\",\r\n    \"deserve\",\r\n    \"unlawful\",\r\n    \"stadium\",\r\n    \"ample\",\r\n    \"stun\",\r\n    \"rest\",\r\n    \"topple\",\r\n    \"outfit\",\r\n    \"help\",\r\n    \"railroad\",\r\n    \"on\",\r\n    \"wardrobe\",\r\n    \"problem\",\r\n    \"tune\",\r\n    \"shadow\",\r\n    \"journal\",\r\n    \"sodium\",\r\n    \"convert\",\r\n    \"memory\",\r\n    \"attract\",\r\n    \"health\",\r\n    \"initiative\",\r\n    \"feminine\",\r\n    \"junior\",\r\n    \"girlfriend\",\r\n    \"pack\",\r\n    \"sketch\",\r\n    \"illustrate\",\r\n    \"related\",\r\n    \"satisfied\",\r\n    \"explode\",\r\n    \"underline\",\r\n    \"engagement\",\r\n    \"absent\",\r\n    \"inflate\",\r\n    \"piece\",\r\n    \"patient\",\r\n    \"curtain\",\r\n    \"liability\",\r\n    \"official\",\r\n    \"suffer\",\r\n    \"koran\",\r\n    \"revise\",\r\n    \"federation\",\r\n    \"predict\",\r\n    \"cluster\",\r\n    \"turkey\",\r\n]","import React, {useState} from 'react';\r\nimport './Game.css';\r\nimport Typing from './Typing/Typing';\r\nimport CorrectAnswers from './CorrectAnswers/CorrectAnswers';\r\nimport {words} from '../assets/words';\r\n\r\nconst Game = (props) => {\r\n\r\n    const [succeesWords, setSuccesWords] = useState([]);\r\n\r\n    return (\r\n        <div className=\"Game\">\r\n            <Typing \r\n                started={props.started} \r\n                words={words} \r\n                difficultyLevel={props.difficultyLevel}\r\n                setSuccesWords={setSuccesWords}\r\n                succeesWords={succeesWords}\r\n            />\r\n            <CorrectAnswers \r\n            started={props.started}\r\n            succeesWords={succeesWords}/> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;","import React, {useState} from 'react';\nimport {CSSTransition} from 'react-transition-group';\nimport Game from './Game/Game';\n\nimport './App.css';\n\nconst App = () => {\n\n  const [showDifficulty, setShowDifficulty] = useState(false);\n  const [difficultyLevel, setDifficultyLevel] = useState('easy');\n  const [isGame, setIsGame] = useState(false);\n  \n  const difficulty = () =>{\n    return(\n      <CSSTransition in={showDifficulty} timeout={500} classNames='difficulty' unmountOnExit>\n        <div className=\"difficulty\">\n          <h1>Difficulty</h1>\n          <select name=\"difficulty\" id=\"difficulty\" onChange={(e) =>setDifficultyLevel(e.target.value)}>\n            <option value='easy' selected>Easy</option>\n            <option value='medium'>Medium</option>\n            <option value='hard'>Hard</option>\n          </select>\n        </div>\n      </CSSTransition>\n    )\n  }\n\n\n  const handleStartGame = (e) =>{\n    setShowDifficulty(false);\n    setIsGame(true);\n    e.target.classList.add('start-game-button-hide');\n  }\n\n  return (\n    <div className=\"App\">\n      {difficulty()}\n      <button \n        onClick={handleStartGame} \n        className=\"start-game-button\">Start Game\n      </button>\n      <button \n        onClick={() =>setShowDifficulty(!showDifficulty)}\n        className=\"difficulty-button\"\n        disabled={isGame}>🔲\n      </button>\n      <Game started={isGame} difficultyLevel={difficultyLevel}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}